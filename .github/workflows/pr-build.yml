name: PR Build

on:
  pull_request:
    types: [opened, closed, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAXMINDDB_USER_ID: ${{ secrets.MAXMINDDB_USER_ID }}
  MAXMINDDB_LICENSE_KEY: ${{ secrets.MAXMINDDB_LICENSE_KEY }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate matrix
        id: generate
        run: ./scripts/generate-pr-build-matrix.sh

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5

      - name: Generate GitHub metadata
        id: github-meta
        uses: dockerbakery/github-metadata-action@v3

      - if: github.event.pull_request.merged == 'true'
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          targets: ${{ matrix.target }}
          push: ${{ github.event.pull_request.merged == 'true' }}
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.docker-meta.outputs.bake-file-labels }}
            cwd://${{ steps.docker-meta.outputs.bake-file-annotations }}
            cwd://${{ steps.github-meta.outputs.bake-file }}
          set: |
            *.cache-from=type=gha
            ${{ github.event.pull_request.merged == 'true' && '*.cache-to=type=gha,mode=max' || '' }}
